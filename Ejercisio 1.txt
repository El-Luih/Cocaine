import java.util.Scanner;
import java.util.Random;

public class TicTacToe {
    private static char[][] board = new char[3][3];
    private static Scanner scanner = new Scanner(System.in);
    private static Random random = new Random();

    public static void main(String[] args) {
        board = generarTablero(board);
        boolean isUserTurn = true;
        boolean gameEnded = false;
        
        while (!gameEnded) {
            printBoard();
            if (isUserTurn) {
                userTurn();
            } else {
                machineTurn();
            }
            char currentPlayer = isUserTurn ? 'X' : 'O';
            gameEnded = verificarVictoria(board, currentPlayer);
            isUserTurn = !isUserTurn;
        }
        printBoard(); // Mostrar el tablero final
        System.out.println("¡Juego terminado!");
    }

    private static char[][] generarTablero(char[][] tablero) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                tablero[i][j] = ' ';
            }
        }
        return tablero;
    }

    private static void printBoard() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print(board[i][j]);
                if (j < 2) System.out.print("|");
            }
            System.out.println();
            if (i < 2) System.out.println("-----");
        }
    }

    private static void userTurn() {
        int x = -1, y = -1;
        boolean validInput = false;
        while (!validInput) {
            System.out.println("Ingrese fila (1-3) y columna (1-3) para 'X': ");
            x = scanner.nextInt() - 1;
            y = scanner.nextInt() - 1;
            validInput = verificarPosicionValida(board, x, y);
            if (!validInput) {
                System.out.println("Entrada inválida o posición ocupada. Por favor, intente de nuevo.");
            }
        }
        board[x][y] = 'X';
    }

    private static void machineTurn() {
        int x, y;
        do {
            x = random.nextInt(3);
            y = random.nextInt(3);
        } while (!verificarPosicionValida(board, x, y));

        board[x][y] = 'O';
        System.out.println("La máquina jugó en (" + (x + 1) + ", " + (y + 1) + ")");
    }

    private static boolean verificarPosicionValida(char[][] tablero, int fila, int columna) {
        return fila >= 0 && fila < 3 && columna >= 0 && columna < 3 && tablero[fila][columna] == ' ';
    }

    private static boolean verificarVictoria(char[][] tablero, char jugador) {
        for (int i = 0; i < 3; i++) {
            if (tablero[i][0] == jugador && tablero[i][0] == tablero[i][1] && tablero[i][1] == tablero[i][2]) return true;
            if (tablero[0][i] == jugador && tablero[0][i] == tablero[1][i] && tablero[1][i] == tablero[2][i]) return true;
        }
        if (tablero[0][0] == jugador && tablero[0][0] == tablero[1][1] && tablero[1][1] == tablero[2][2]) return true;
        if (tablero[0][2] == jugador && tablero[0][2] == tablero[1][1] && tablero[1][1] == tablero[2][0]) return true;

        return false;
    }
}
